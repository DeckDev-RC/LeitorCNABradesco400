#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de demonstra√ß√£o do Editor Gr√°fico de CNAB
Permite edi√ß√£o visual dos campos NOSSO_NUMERO e CODIGO_EMPRESA
"""

import sys
import os

# Adicionar o diret√≥rio pai ao path para importar o m√≥dulo
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from PyQt5.QtWidgets import QApplication
from cnab_bradesco_gui import CNABBradescoGUI

def demonstrar_editor_grafico():
    """Demonstra o uso do editor gr√°fico"""
    print("=" * 80)
    print("üé® DEMONSTRA√á√ÉO DO EDITOR GR√ÅFICO DE CNAB")
    print("=" * 80)
    print("Este script abre a interface gr√°fica principal do sistema")
    print("onde voc√™ poder√° testar o novo Editor Gr√°fico.")
    print("=" * 80)
    
    print("\nüîß FUNCIONALIDADES DO EDITOR GR√ÅFICO:")
    print("1. ‚úèÔ∏è  Interface visual moderna e intuitiva")
    print("2. üìã Tabela com todos os registros CNAB")
    print("3. üîç Filtros de busca por Nosso N√∫mero e C√≥digo da Empresa")
    print("4. ‚ú® Edi√ß√£o direta na tabela (duplo clique)")
    print("5. üîß Edi√ß√£o em lote para aplicar valores a m√∫ltiplos registros")
    print("6. ‚úÖ Valida√ß√£o autom√°tica dos dados inseridos")
    print("7. üé® Destaque visual dos registros alterados")
    print("8. üíæ Salvamento em novo arquivo CNAB")
    
    print("\nüéØ CAMPOS EDIT√ÅVEIS:")
    print("‚Ä¢ NOSSO_NUMERO - N√∫mero do t√≠tulo no banco (m√°x. 12 d√≠gitos)")
    print("‚Ä¢ CODIGO_EMPRESA - C√≥digo da empresa no banco (m√°x. 17 caracteres)")
    
    print("\nüìù COMO USAR:")
    print("1. Carregue um arquivo CNAB na interface principal")
    print("2. Clique no bot√£o '‚úèÔ∏è Editor Gr√°fico' (verde)")
    print("3. Use a tabela para visualizar e editar os campos")
    print("4. Use os filtros para encontrar registros espec√≠ficos")
    print("5. Use a edi√ß√£o em lote para altera√ß√µes em massa")
    print("6. Salve as altera√ß√µes em um novo arquivo")
    
    print("\nüîç VALIDA√á√ïES IMPLEMENTADAS:")
    print("‚Ä¢ Nosso N√∫mero: Apenas n√∫meros, m√°ximo 12 d√≠gitos")
    print("‚Ä¢ C√≥digo Empresa: Alfanum√©rico, m√°ximo 17 caracteres")
    print("‚Ä¢ Campos obrigat√≥rios n√£o podem ficar vazios")
    print("‚Ä¢ Confirma√ß√£o antes de aplicar altera√ß√µes em lote")
    
    print("\nüí° DICAS DE USO:")
    print("‚Ä¢ Duplo clique nas c√©lulas para editar")
    print("‚Ä¢ Use os filtros para trabalhar com subconjuntos")
    print("‚Ä¢ Registros alterados ficam destacados em azul")
    print("‚Ä¢ O contador mostra quantos registros foram alterados")
    print("‚Ä¢ O arquivo original nunca √© modificado")
    
    print("\n" + "=" * 80)
    print("üöÄ INICIANDO INTERFACE GR√ÅFICA...")
    print("=" * 80)
    
    # Verificar se existem arquivos CNAB para teste
    arquivos_cnab = [f for f in os.listdir('..') if f.upper().endswith('.TXT')]
    
    if arquivos_cnab:
        print(f"\nüìÅ {len(arquivos_cnab)} arquivo(s) CNAB encontrado(s) no diret√≥rio:")
        for arquivo in arquivos_cnab[:5]:  # Mostrar apenas os primeiros 5
            print(f"  ‚Ä¢ {arquivo}")
        if len(arquivos_cnab) > 5:
            print(f"  ‚Ä¢ ... e mais {len(arquivos_cnab) - 5} arquivo(s)")
    else:
        print("\n‚ö†Ô∏è  Nenhum arquivo CNAB (.TXT) encontrado no diret√≥rio pai.")
        print("üí° Coloque um arquivo CNAB na pasta do projeto para testar.")
    
    print("\n‚ú® A interface gr√°fica ser√° aberta em uma nova janela...")
    print("üéØ Procure pelo bot√£o '‚úèÔ∏è Editor Gr√°fico' (verde) ap√≥s carregar um arquivo CNAB!")

def main():
    """Fun√ß√£o principal"""
    try:
        # Mostrar informa√ß√µes sobre o editor gr√°fico
        demonstrar_editor_grafico()
        
        # Criar aplica√ß√£o Qt
        app = QApplication(sys.argv)
        
        # Criar e mostrar a janela principal
        window = CNABBradescoGUI()
        window.show()
        
        # Executar a aplica√ß√£o
        sys.exit(app.exec_())
        
    except KeyboardInterrupt:
        print("\n\nüëã Demonstra√ß√£o interrompida pelo usu√°rio.")
    except Exception as e:
        print(f"\n‚ùå Erro inesperado: {str(e)}")
        import traceback
        print(f"üîç Detalhes: {traceback.format_exc()}")

if __name__ == "__main__":
    main() 